name: Satis build & deploy

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - ".github/workflows/on-dispatch.yml"
  workflow_dispatch:
    inputs:
      package_name:
        description: 'eg "astralweb/module-config-banner", must be same as defined in satis.json.'
        required: true
  repository_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - run: echo ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Cache Satis packages
      id: satis-cache
      uses: actions/cache@v3
      with:
        path: composer-cache
        key: ${{ runner.os }}-satis-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
        restore-keys: |
          ${{ runner.os }}-satis-

    - name: Cache Satis output
      id: output-cache
      uses: actions/cache@v3
      with:
        path: data/build
        key: ${{ runner.os }}-output-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
        restore-keys: |
          ${{ runner.os }}-output-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Set github auth
      env:
        GITHUB_OAUTH: ${{ secrets.GITHUB }}
      run: composer config github-oauth.github.com $GITHUB_OAUTH

    - name: Build Satis
      env:
        PACKAGE_NAME: '${{ github.event.inputs.package_name || github.event.client_payload.package_name }}'
        # SATIS_HOMEPAGE: '${{ steps.deployment.outputs.page_url }}'
      run: composer satis:build satis.json data/build $PACKAGE_NAME

    - name: Upload built output for deploy
      uses: actions/upload-artifact@v3
      with:
        name: output
        path: data/build

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download built output for deploy
        uses: actions/download-artifact@v3
        with:
          name: output
          path: output

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'output'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
